[package]
name = "wwrr"
description = "WASI Web Reactor Runtime"
version.workspace = true
authors = ["Sebastian Urban <surban@surban.net>", "Syrus Akbary <syrus@wasmer.io>"]
edition = "2021"
publish = false

[lib]
crate-type = ["cdylib"]

[features]
wat = ["wasmer/wat"]

[dependencies]
utils = { path = "../utils" }
virtual-fs = { path = "../virtual-fs" }
virtual-mio = { path = "../virtual-mio" }
virtual-net = { path = "../virtual-net" }
wasmer = { path = "../api" }
wasmer-types = { path = "../types" }
wasmer-wasix = { path = "../wasix" }

anyhow = { workspace = true }
async-trait = { workspace = true }
bytes = { workspace = true }
console_error_panic_hook = { workspace = true }
derivative = { workspace = true }
futures = { workspace = true }
instant = { workspace = true, features = ["wasm-bindgen"] }
js-sys = { workspace = true }
lazy_static = { workspace = true }
once_cell = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde-wasm-bindgen = { workspace = true }
sha2 = { workspace = true }
tokio = { workspace = true, features = ["sync"] }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
wasm-bindgen = { workspace = true }
wasm-bindgen-futures = { workspace = true }

[dependencies.web-sys]
workspace = true
features = [
    "BinaryType",
    "Blob",
    "BlobPropertyBag",
    "console",
    "DedicatedWorkerGlobalScope",
    "DomException",
    "ErrorEvent",
    "File",
    "FileReader",
    "FileSystemDirectoryHandle",
    "FileSystemFileHandle",
    "FileSystemGetDirectoryOptions",
    "FileSystemHandle",
    "Headers",
    "MessageEvent",
    "Navigator",
    "ProgressEvent",
    "QueuingStrategy",
    "ReadableByteStreamController",
    "ReadableStream",
    "ReadableStreamDefaultController",
    "ReadableStreamDefaultReader",
    "Request",
    "RequestInit",
    "RequestMode",
    "Response",
    "StorageManager",
    "Url",
    "WebSocket",
    "Window",
    "Worker",
    "WorkerGlobalScope",
    "WorkerNavigator",
    "WorkerOptions",
    "WorkerType",
    "WritableStream",
    "WritableStreamDefaultController",
    "WritableStreamDefaultWriter",
]

[dev-dependencies]
wasm-bindgen-test = { workspace = true }

[package.metadata.wasm-pack.profile.release.wasm-bindgen]
debug-js-glue = false
demangle-name-section = false
dwarf-debug-info = false

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["--enable-threads", "--enable-bulk-memory", "-Oz"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(wasm_bindgen_unstable_test_coverage)'] }
